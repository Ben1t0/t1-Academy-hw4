version: '3.8'

networks:
  hw4-network:
    driver: bridge

services:
  zookeeper:
    image: confluentinc/cp-zookeeper:6.2.0
    container_name: HW4-Zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - hw4-network

  broker:
    image: confluentinc/cp-kafka:7.0.0
    container_name: HW4-Broker
    ports:
      - "9092:9092"
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092,PLAINTEXT_INTERNAL://broker:29092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - hw4-network
    healthcheck:
      test: kafka-topics --bootstrap-server broker:9092 --list
      interval: 30s
      timeout: 10s
      retries: 3

  kafka-producer:
    build: ./kafkaProducer
    container_name: HW4-Producer
    depends_on:
      broker:
        condition: service_healthy
    environment:
      BOOTSTRAP_SERVERS: 'broker:29092'
    ports:
      - "8081:8081"
    networks:
      - hw4-network

  kafka-consumer:
    build: ./kafkaConsumer
    container_name: HW4-Consumer
    depends_on:
      broker:
        condition: service_healthy
    environment:
      BOOTSTRAP_SERVERS: 'broker:29092'
    ports:
      - "8080:8080"
    networks:
      - hw4-network